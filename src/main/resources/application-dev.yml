debug: false

spring:
  datasource:
    primary:
      type: com.zaxxer.hikari.HikariDataSource
      jdbcUrl: jdbc:mysql://localhost:3306/rabbit?characterEncoding=utf-8&useSSL=true
      username: root
      password: 
      poolName: PrimaryDatabaseConnectionPool
      maxLifetime: 1765000 #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      maximumPoolSize: 15 #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      minimumIdle: 5 #连接池中允许的最小闲置连接数
      connectionTimeout: 60000 # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      idleTimeout: 600000 #一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
    secondary:
      type: com.zaxxer.hikari.HikariDataSource
      jdbc-url: jdbc:mysql://localhost:3306/rabbit_secondary?characterEncoding=utf-8&useSSL=true
      username: root
      password: 
      pool-name: SecondaryDatabaseConnectionPool
      max-lifetime: 1765000 #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      maximum-pool-size: 15 #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      minimum-idle: 5 #连接池中允许的最小闲置连接数
      connection-timeout: 60000 # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      idle-timeout: 600000 #一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      use-new-id-generator-mappings: false 
      ddl-auto: update
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  main:
    banner-mode: "off"
  mvc:
    static-path-pattern: /static/**
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    servlet:
      content-type: text/html; charset=utf-8
    cache: false
        
logging:
  config: classpath:logback.xml
  
project:
  base:
    security:
      # Specifies the URLs to be required to login as the roles "adminRoles" matched 
      adminRoleMatchers:
       - /admin/**
      # Any one of the roles to require for adminRoleMatchers
      # Each of the roles should not start with "ROLE_" as this is automatically inserted
      # 只有角色ADMIN 和 MANAGER 可以访问后台
      adminRoles:
        - ADMIN
        - MANAGER
        - NORMAL
      # Allows adding RequestMatcher instances that do not to be required to login
      nonAuthenticatedMatchers:
        - /**
      # Specifies the URL to send users to if login is required
      loginPage: /login
      # Specifies where users will go after authenticating successfully
      defaultLoginSuccessUrl: /
      # true if the defaultSuccesUrl should be used after authentication despite
      # if a protected page had been previously visited
      alwaysUseDefaultSuccessUrl: true
      # The URL that will invoke logout
      logoutUrl: /logout
      # The URL to redirect to after logout has occurred.
      # The default is "/login?logout". 
      defaultLogoutSuccessUrl: /login
      # Controls the maximum number of sessions for a user.
      # The default is to allow any number of users.
      maximumSessions: 1
      # If true, prevents a user from authenticating when the maximumSessions(int) has been reached.
      # Otherwise (default), the user who authenticates is allowed access 
      # and an existing user's session is expired. 
      # The user's who's session is forcibly expired is sent to expiredUrl(String).
      # The advantage of this approach is if a user accidentally does not log out,
      # there is no need for an administrator to intervene or wait till their session expires.
      maxSessionsPreventsLogin: false
      # The URL to redirect to if a user tries to access a resource 
      # and their session has been expired due to too many sessions for the current user. 
      expiredUrl: /expired
      # Allows specifying how long (in seconds) a token is valid for, set as one week, defualt is two weeks
      tokenValiditySeconds: 604800
      # The HTTP parameter used to indicate to remember the user at time of login.
      rememberMeParameter: remember-me
      # The name of cookie which store the token for remember me authentication.
      # Defaults to 'remember-me'.
      rememberMeCookieName: rabbit
      # Allows adding RequestMatcher instances that should that Spring Security should ignore.
      # Web Security provided by Spring Security (including the SecurityContext) 
      # will not be available on HttpServletRequest that match.
      # Typically the requests that are registered should be that of only static resources.
      # For requests that are dynamic, consider mapping the request to allow all users instead. 
      ignoringMatchers:
        - /static/**
        - /**/favicon.ico